"use client";

import { useState, useEffect } from "react";
import { useTriviaStore } from "@/app/lib/store";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogFooter,
} from "@/app/components/ui/dialog";
import { Button } from "@/app/components/ui/button";
import { Label } from "@/app/components/ui/label";
import { Switch } from "@/app/components/ui/switch";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/app/components/ui/select";
import { Info } from "lucide-react";

interface TriviaSettingsProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

export const TriviaSettings = ({ open, onOpenChange }: TriviaSettingsProps) => {
  const { setUseDynamicQuestions, setDifficulty, useDynamicQuestions, difficulty } = useTriviaStore();
  const [enableDynamicQuestions, setEnableDynamicQuestions] = useState(useDynamicQuestions);
  const [selectedDifficulty, setSelectedDifficulty] = useState<"easy" | "medium" | "hard">(difficulty);
  
  // Update local state when store values change
  useEffect(() => {
    setEnableDynamicQuestions(useDynamicQuestions);
    setSelectedDifficulty(difficulty);
  }, [useDynamicQuestions, difficulty]);

  const handleSave = () => {
    setUseDynamicQuestions(enableDynamicQuestions);
    setDifficulty(selectedDifficulty);
    onOpenChange(false);
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-[425px]">
        <DialogHeader>
          <DialogTitle>Trivia Settings</DialogTitle>
          <DialogDescription>
            Configure your trivia experience with dynamic questions generated by AI.
          </DialogDescription>
        </DialogHeader>
        <div className="grid gap-4 py-4">
          <div className="grid gap-2">
            <div className="flex items-center justify-between">
              <Label htmlFor="dynamic-questions" className="cursor-pointer">Use AI-Generated Questions</Label>
              <Switch 
                id="dynamic-questions" 
                checked={enableDynamicQuestions}
                onCheckedChange={setEnableDynamicQuestions}
              />
            </div>
            <p className="text-xs text-muted-foreground flex items-start gap-1.5">
              <Info className="h-3.5 w-3.5 mt-0.5 flex-shrink-0" />
              <span>
                Enable AI-generated questions based on difficulty level.
                Each question will be from a specific year, with years decreasing as you progress.
              </span>
            </p>
          </div>
          <div className="grid gap-2">
            <Label htmlFor="difficulty">Difficulty</Label>
            <Select
              value={selectedDifficulty}
              onValueChange={(value: string) => setSelectedDifficulty(value as "easy" | "medium" | "hard")}>
              <SelectTrigger id="difficulty">
                <SelectValue placeholder="Select difficulty" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="easy">Easy (1 year gap)</SelectItem>
                <SelectItem value="medium">Medium (2 year gap)</SelectItem>
                <SelectItem value="hard">Hard (3 year gap)</SelectItem>
              </SelectContent>
            </Select>
            <p className="text-xs text-muted-foreground">
              Higher difficulty means larger year gaps between questions.
            </p>
          </div>
        </div>
        <DialogFooter>
          <Button type="submit" onClick={handleSave}>Save changes</Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
};
